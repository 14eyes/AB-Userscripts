{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/ab_torrent_sorter.user.js"],"names":["ABTorrentSorter","row_to_field_list","_debug","field_mapping","torrent_row","link","firstElementChild","children","tagName","console","log","spans","i","length","textContent","split_fields","replace","trim","split","field","indexOf","charAt","s","slice","join","get_weight","x","weight","sort_comparer","a","b","a_iter","b_iter","a_value","b_object","next","done","b_value","value","a_weight","b_weight","sort_table","table","tbody","is_first_link","num_children","current_torrent_group","r","row","classList","contains","href","push","sort","docFrag","document","createDocumentFragment","elem","nextElementSibling","appendChild","insertBefore","torrent_tables","querySelectorAll","t"],"mappings":";;;;;;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;ACnEA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,cAAc;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAC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","file":"ab_torrent_sorter.user.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/ab_torrent_sorter.user.js\");\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","// ==UserScript==\r\n// @name AnimeBytes Torrent Sorter\r\n// @author TheFallingMan\r\n// @version 0.0.1\r\n// @description Sorts torrents on torrent pages in order of quality.\r\n// @match https://*.animebytes.tv/*\r\n// @icon http://animebytes.tv/favicon.ico\r\n// ==/UserScript==\r\n\r\n(function ABTorrentSorter() {\r\n    /** Enables/disables logging to console. */\r\n    const _debug = false;\r\n\r\n    /**\r\n     * Mapping between field properties and their relative\r\n     * 'quality'. Lower numbers will be sorted first.\r\n     *\r\n     * @type {Object<string, number>}\r\n     */\r\n    const field_mapping = {\r\n        \"Blu-ray\":10,\r\n        \"Web\":34,\r\n        \"TV\":35,\r\n        \"DVD\": 30,\r\n        \"UHD Blu-ray\":9,\r\n        'DVD5': 31,\r\n        'DVD9':32,\r\n        \"HD DVD\":29,\r\n        \"VHS\":50,\r\n        \"VCD\":50,\r\n        \"LD\": 50,\r\n\r\n        'MKV':5,\r\n        'M2TS':50,\r\n        'ISO':40,\r\n        'AVI':20,\r\n        'VOB IFO':42,\r\n        'MP4':22,\r\n        'OGM':25,\r\n        'WMV':26,\r\n        'MPG':23,\r\n        'MPEG':23,\r\n        'VOB':43,\r\n        'TS':49,\r\n\r\n        \"16:9\":5,\r\n        \"4:3\":6,\r\n        \"1.85:1\":4,\r\n        \"2.39:1\":3,\r\n        \"2.4:1\":2,\r\n\r\n        \"h264\": 21,\r\n        \"h264 10-bit\": 20,\r\n        \"h265\": 11,\r\n        \"h265 10-bit\": 10,\r\n        \"XviD\": 25,\r\n        \"DivX\": 25,\r\n        //\"WMV\": 26,\r\n        \"MPEG-TS\": 23,\r\n        \"MPEG\": 22,\r\n        \"VC-1\": 24,\r\n\r\n        '480p': 30,\r\n        '720p':20,\r\n        '1080p':15,\r\n        '1080i':16,\r\n        '4K':10,\r\n        '2560x1440': 13,\r\n\r\n        \"FLAC\":10,\r\n        \"AAC\":20,\r\n        \"AC3\":19,\r\n        \"MP3\":30,\r\n        \"Vorbis\":21,\r\n        \"Opus\":21,\r\n        \"TrueHD\":11,\r\n        \"DTS\":17,\r\n        \"DTS-ES\":14,\r\n        \"PCM\":5,\r\n        \"WMA\":22,\r\n        \"Real Audio\":23,\r\n        \"DTS-HD MA\":12,\r\n        \"DTS-HD\":13,\r\n\r\n        '7.1': 1,\r\n        '6.1': 5,\r\n        '6.0': 6,\r\n        '5.1': 10,\r\n        '5.0':11,\r\n        '2.1': 20,\r\n        '2.0': 21,\r\n        '1.0': 30,\r\n\r\n        'Dual Audio': 5,\r\n        'Softsubs': 10,\r\n        'Hardsubs':12,\r\n        'RAW': 15,\r\n    };\r\n\r\n    /**\r\n     * Returns a generator iterating over the properties of the given\r\n     * <tr>, from left to right.\r\n     *\r\n     * @example\r\n     *      var iter = row_to_field_list($('tr'));\r\n     *      iter.next().value; // Blu-ray\r\n     *      iter.next().value; // MKV\r\n     *      iter.next().value; // h265\r\n     *\r\n     * @param {HTMLTableRowElement} torrent_row Row element to parse\r\n     */\r\n    function *row_to_field_list(torrent_row) {\r\n        /* Structure is something like:\r\n        <tr>\r\n            <td>\r\n                <span>[DL | RP]</span>\r\n                <a>Blu-ray | MKV | h265 | ... </a>\r\n            </td>\r\n        </tr>\r\n        */\r\n        let link = torrent_row.firstElementChild.children[1];\r\n        //console.log(torrent_row);\r\n        ///console.log(link);\r\n\r\n        // (Experimental) compatibility with eva's torrent highlighter.\r\n        // We check if the link contains spans.\r\n        if (link.firstElementChild && link.firstElementChild.tagName === 'SPAN') {\r\n            // In this case, our work is done and we just need to return\r\n            // each span's text.\r\n            _debug && console.log('span');\r\n            let spans = link.children;\r\n            for (let i = 0; i < spans.length; i++) {\r\n                yield (spans[i].textContent);\r\n            }\r\n        } else {\r\n            // Otherwise, we split and return the fields ourselves.\r\n            _debug && console.log('textContent');\r\n            let split_fields = link.textContent.replace('»', '').trim().split(' | ');\r\n            for (let i = 0; i < split_fields.length; i++) {\r\n                let field = split_fields[i];\r\n                // This handles sub groups and region codes.\r\n                // Will work incorrectly if a sub group contains |\r\n                if (field.indexOf('(') !== -1 && field.charAt(field.length-1) === ')') {\r\n                    let s = field.split(' (');\r\n                    yield (s[0]);\r\n                    yield (s[1].trim(')'));\r\n                } else if (field.charAt(field.length-2) === '.') {\r\n                    // If the second last char is a . we assume it's an\r\n                    // audio channel field.\r\n                    let s = field.split(' ');\r\n                    yield (s.slice(0, -1).join(' '));\r\n                    yield (s[s.length-1]);\r\n                } else {\r\n                    yield (field);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the sorting weight of the value `x` from the defined field mapping.\r\n     * @param {string} x Field value\r\n     */\r\n    function get_weight(x) {\r\n        let weight = field_mapping[x];\r\n        if (weight) {\r\n            return weight;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Iterates through each property of a and b from left to right,\r\n     * comparing each property in turn using get_weight().\r\n     *\r\n     * For use as a comparison function in the .sort() method. Returns a positive\r\n     * number when b < a, negative for a < b, and 0 if a = b.\r\n     * @param {HTMLTableRowElement} a\r\n     * @param {HTMLTableRowElement} b\r\n     */\r\n    function sort_comparer(a, b) {\r\n        let a_iter = row_to_field_list(a);\r\n        let b_iter = row_to_field_list(b);\r\n\r\n        for (let a_value of a_iter) {\r\n            var b_object = b_iter.next();\r\n            if (b_object.done) {\r\n                // In case of one string being shorter than the other,\r\n                // we sort the shorter one first.\r\n                return 1;\r\n            }\r\n            let b_value = b_object.value;\r\n            if (a_value === b_value) {\r\n                continue;\r\n            }\r\n            let a_weight = get_weight(a_value);\r\n            let b_weight = get_weight(b_value);\r\n            //_debug && (`a: ${a_value} ${a_weight}; b: ${b_value} ${b_weight}`)\r\n            // Doing an arithmetic comparison only makes sense when both\r\n            // a and b have defined weights.\r\n            if (a_weight && b_weight) {\r\n                // This integer subtraction results in the correct sorting.\r\n                return a_weight - b_weight;\r\n            } else {\r\n                // Use string (alphabetical) sort on the original strings.\r\n                return (a_value < b_value) ? -1 : 1;\r\n            }\r\n        }\r\n        // If a and b have the same number of elements, they will finish at\r\n        // the same time and are equal.\r\n        if (b_object.done)\r\n            return 0\r\n        // Otherwise, a < b.\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Sorts a whole table element. Capable of understanding subheadings inside\r\n     * the table, and will not sort rows across them.\r\n     * @param {HTMLTableElement} table\r\n     */\r\n    function sort_table(table) {\r\n        let tbody = table.firstElementChild;\r\n        let is_first_link = true;\r\n        let num_children = tbody.children.length;\r\n        let current_torrent_group = [];\r\n        for (let r = 0; r < num_children; r++) {\r\n            let row = tbody.children[r];\r\n            ///console.log(row);\r\n            // If this row is a torrent link\r\n            if (row.classList.contains('group_torrent')) {\r\n                // We skip sorting torrents2.php links, as they are music\r\n                // and not nearly as varied as anime torrents.\r\n                if (is_first_link &&\r\n                    row.firstElementChild.children[1].href.indexOf('torrents.php?') === -1) {\r\n                    break;\r\n                }\r\n                is_first_link = false;\r\n                current_torrent_group.push(row);\r\n            // We use 'pad' class to check for the torrent information rows.\r\n            // (There must be a better way.)\r\n            // If it is not a pad or group_torrent, then it is a subheading\r\n            // and we sort all torrents above this header.\r\n            } else if (!row.classList.contains('pad')\r\n                    && current_torrent_group.length) {\r\n                ///console.log('sorting!');\r\n                // Skip small torrent groups, e.g. single manga or game torrents.\r\n                if (current_torrent_group.length <= 3) {\r\n                    current_torrent_group = [];\r\n                    continue;\r\n                }\r\n                // Sort with our custom sort function.\r\n                current_torrent_group.sort(sort_comparer);\r\n                let docFrag = document.createDocumentFragment();\r\n                for (let s = 0; s < current_torrent_group.length; s++) {\r\n                    let elem = current_torrent_group[s];\r\n                    // Stores element after this row, checking if it is this\r\n                    // row's information row.\r\n                    // IMPORTANT: this must be before 'elem' is inserted\r\n                    // elsewhere.\r\n                    let next = elem.nextElementSibling;\r\n                    // Append torrent row.\r\n                    docFrag.appendChild(elem);\r\n                    //console.log(s.textContent);\r\n                    // Checks if 'next' is an info row.\r\n                    if (next && next.classList.contains('pad'))\r\n                        docFrag.appendChild(next);\r\n                }\r\n                // Inserts the sorted docFrag before the header.\r\n                tbody.insertBefore(docFrag, row);\r\n                current_torrent_group = [];\r\n            }\r\n        }\r\n        // This will fall through the bottom of the table, because there\r\n        // is no subheading there. In that case, we sort everything\r\n        // that's left and just append it.\r\n        if (current_torrent_group.length) {\r\n            current_torrent_group.sort(sort_comparer);\r\n            for (let s = 0; s < current_torrent_group.length; s++) {\r\n                let elem = current_torrent_group[s];\r\n                let next = elem.nextElementSibling;\r\n                tbody.appendChild(elem);\r\n                //console.log(s.textContent);\r\n                if (next && next.classList.contains('pad'))\r\n                    tbody.appendChild(next);\r\n            }\r\n        }\r\n    }\r\n\r\n    let torrent_tables = document.querySelectorAll('table.torrent_table');\r\n    for (let t = 0; t < torrent_tables.length; t++) {\r\n        sort_table(torrent_tables[t]);\r\n    }\r\n})();"],"sourceRoot":""}